SELECT
    FLOOR(DBMS_RANDOM.VALUE(10000000, 99999999)) AS nroOperacion,
    XMLSERIALIZE(
        CONTENT
            XMLELEMENT("raiz",
                XMLELEMENT("operaciones",
                    XMLELEMENT("seccOperacion",
                        XMLELEMENT("nroOperacion", FLOOR(DBMS_RANDOM.VALUE(10000000, 99999999))),
                        XMLELEMENT("operacion", 'REN'),
                        XMLELEMENT("EEFF", 'BSO'),
                        XMLELEMENT("feOperacion", '22/07/2025'),
                        XMLELEMENT("seccTituloValor",
                            XMLELEMENT("inst", 'DPF'),
                            XMLELEMENT("serie", 'BNB' || SUBSTR(DBMS_RANDOM.STRING('N', 6), 1, 6) || '25'),
                            XMLELEMENT("feEmision", TO_CHAR(FE_EMISION, 'DD/MM/YYYY')),
                            XMLELEMENT("plazo", PLAZO),
                            XMLELEMENT("origenEmision", ORIGEN_EMISION),
                            XMLELEMENT("feVtco", TO_CHAR(FE_VTCO, 'DD/MM/YYYY')),
                            XMLELEMENT("moneda", MONEDA),
                            XMLELEMENT("valorNominal", VALOR_NOMINAL),
                            XMLELEMENT("tipoInteres", TIPO_INTERES),
                            XMLELEMENT("modPagoInteres", MOD_PAGO_INTERES),
                            XMLELEMENT("emisor", EMISOR),
                            XMLELEMENT("codVerif", COD_VERIF),
                            XMLELEMENT("codigoAlterno", CODIGO_ALTERNO),
                            XMLELEMENT("lugarPago", LUGAR_PAGO),
                            XMLELEMENT("tasaIntNom", TASA_INT_NOM),
                            XMLELEMENT("tasaIntPas", TASA_INT_PAS),
                            XMLELEMENT("serieAnterior", SERIE_ANTERIOR)
                        )
                    )
                )
            )
        AS CLOB
    ) AS XML_OUTPUT
FROM OPERACIONES_XML
WHERE ROWNUM <= 10

SELECT TO_CHAR(123.4, 'FM9999999990D00', 'NLS_NUMERIC_CHARACTERS = ''.''') AS resultado FROM dual;

import csv
import os

# Nombre del archivo CSV exportado
csv_file = 'resultados.csv'  # Cambia por el nombre de tu archivo exportado

# Carpeta donde se guardarán los archivos (se crea si no existe)
output_dir = 'clob_files'
os.makedirs(output_dir, exist_ok=True)

with open(csv_file, newline='', encoding='utf-8') as f:
    reader = csv.DictReader(f)
    for row in reader:
        # Usa la columna 'id' para el nombre del archivo
        file_name = f"{row['id']}.xml"  # Cambia extensión si quieres otro formato
        file_path = os.path.join(output_dir, file_name)
        
        # Escribe el contenido del CLOB en el archivo
        with open(file_path, 'w', encoding='utf-8') as outfile:
            outfile.write(row['clob_contenido'])

print(f"Archivos guardados en la carpeta '{output_dir}'")


